package yega.alogorithms.randomizecontraction;

import static org.junit.Assert.assertThat;
import static yega.alogorithms.randomizecontraction.RandomizeContractionAlgorithmTestData.*;

import org.hamcrest.CoreMatchers;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

public class RandomizeContracionAlgorithmTest {

	RandomizeContracionAlgorithm algo;
	
	@Before
	public void setUp() {
		algo = new RandomizeContracionAlgorithm();
	}
	
	@Test
	public void verifyThatEdgeConnectedWihtVertices() {
		algo.connectVertices(V1,V3,E1);
	}
	
	@Test
	public void verifyRandomChooseOfEdge() {
		initAlgo();
		
		Edge edge = algo.selectRandomEdge();
		
		Assert.assertThat(edge, CoreMatchers.notNullValue());
	}
	
	@Test
	public void verifyThatEdgeProperlyContracted() {
		initAlgo();
		
		assertThat(algo.contractEdge(E2), CoreMatchers.is(STEP1));
		assertThat(algo.contractEdge(E1), CoreMatchers.is(STEP2));
	}
	
	private void initAlgo() {
//		for(Edge edge : EDGES){
//			algo.loadEdge(edge);
//		}
	}
}
